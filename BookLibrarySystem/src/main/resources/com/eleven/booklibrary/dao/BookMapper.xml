<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.eleven.booklibrary.dao.BookMapper" >
  <resultMap id="BaseResultMap" type="com.eleven.booklibrary.model.Book" >
    <id column="bookid" property="bookNumber" jdbcType="DECIMAL" />
    <result column="title" property="bookName" jdbcType="VARCHAR" />
    <result column="author" property="author" jdbcType="VARCHAR" />
    <result column="cbs" property="publisher" jdbcType="VARCHAR" />
    <result column="publish_date" property="publishDate" jdbcType="TIMESTAMP" />
    <result column="price" property="price" jdbcType="VARCHAR" />
    <result column="tslx" property="bookType" jdbcType="VARCHAR" />
    <result column="czy" property="czy" jdbcType="VARCHAR" />
    <result column="sjmc" property="storeLocation" jdbcType="VARCHAR" />
    <result column="rkrq" property="storeDate" jdbcType="TIMESTAMP" />
    <result column="jccs" property="borrowedNumber" jdbcType="INTEGER" />
    <result column="kczl" property="number" jdbcType="INTEGER" />
    <result column="translator" property="translator" jdbcType="VARCHAR" />
    <result column="txm" property="txm" jdbcType="VARCHAR" />
    <result column="bookzt" property="bookzt" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!-- book_number, book_name, author, publisher, publish_date, price, book_type, store_location, 
    store_date, borrowed_number, number -->
    bookid,title,author,cbs,publish_date,price,tslx,czy,sjmc,rkrq,jccs,kczl,translator,txm,bookzt
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.eleven.booklibrary.model.BookExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="offset != null and length != null">
      limit ${offset}, ${length}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from book
    where bookid = #{bookNumber,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from book
    where bookid = #{bookNumber,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="com.eleven.booklibrary.model.BookExample" >
    delete from book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  <insert id="insert" parameterType="com.eleven.booklibrary.model.Book" >
    insert into book (bookid,title,author,cbs,publish_date,price,tslx,czy,sjmc,rkrq,jccs,kczl,translator,txm,bookzt)
    values (#{bookNumber,jdbcType=DECIMAL}, #{bookName,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, 
      #{publisher,jdbcType=VARCHAR}, #{publishDate,jdbcType=TIMESTAMP}, #{price,jdbcType=DECIMAL}, 
      #{bookType,jdbcType=VARCHAR},#{czy,jdbcType=VARCHAR}, #{storeLocation,jdbcType=VARCHAR}, #{storeDate,jdbcType=TIMESTAMP}, 
      #{borrowedNumber,jdbcType=INTEGER}, #{number,jdbcType=INTEGER},#{translator,jdbcType=VARCHAR},#{txm,jdbcType=VARCHAR}, #{bookzt,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.eleven.booklibrary.model.Book" >
    insert into book
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="bookNumber != null" >
        bookid,
      </if>
      <if test="bookName != null" >
        title,
      </if>
      <if test="author != null" >
        author,
      </if>
      <if test="publisher != null" >
        cbs,
      </if>
      <if test="publishDate != null" >
        publish_date,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="bookType != null" >
        tslx,
      </if>
      <if test="czy != null" >
        czy,
      </if>
      <if test="storeLocation != null" >
        sjmc,
      </if>
      <if test="storeDate != null" >
        rkrq,
      </if>
      <if test="borrowedNumber != null" >
        jccs,
      </if>
       <if test="number != null" >
        kczl,
      </if>
      <if test="translator != null" >
        translator,
      </if>
       <if test="txm != null" >
        txm,
      </if>
       <if test="bookzt != null" >
        bookzt,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="bookNumber != null" >
        #{bookNumber,jdbcType=DECIMAL},
      </if>
      <if test="bookName != null" >
        #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="publisher != null" >
        #{publisher,jdbcType=VARCHAR},
      </if>
      <if test="publishDate != null" >
        #{publishDate,jdbcType=TIMESTAMP},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="czy != null" >
        #{czy,jdbcType=VARCHAR},
      </if>
      <if test="bookType != null" >
        #{bookType,jdbcType=VARCHAR},
      </if>
      <if test="storeLocation != null" >
        #{storeLocation,jdbcType=VARCHAR},
      </if>
      <if test="storeDate != null" >
        #{storeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="borrowedNumber != null" >
        #{borrowedNumber,jdbcType=INTEGER},
      </if>
      <if test="number != null" >
        #{number,jdbcType=INTEGER},
      </if>
       <if test="translator != null" >
        #{translator,jdbcType=INTEGER},
      </if>
       <if test="txm != null" >
        #{txm,jdbcType=INTEGER},
      </if>
       <if test="bookzt != null" >
        #{bookzt,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.eleven.booklibrary.model.BookExample" resultType="java.lang.Integer" >
    select count(*) from book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update book
    <set >
      <if test="record.bookNumber != null" >
        bookid = #{record.bookNumber,jdbcType=DECIMAL},
      </if>
      <if test="record.bookName != null" >
        title = #{record.bookName,jdbcType=VARCHAR},
      </if>
      <if test="record.author != null" >
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.publisher != null" >
        cbs = #{record.publisher,jdbcType=VARCHAR},
      </if>
      <if test="record.publishDate != null" >
        publish_date = #{record.publishDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.czy != null" >
        czy = #{record.czy,jdbcType=VARCHAR},
      </if>
      <if test="record.bookType != null" >
        tslx = #{record.bookType,jdbcType=VARCHAR},
      </if>
      <if test="record.storeLocation != null" >
        sjmc = #{record.storeLocation,jdbcType=VARCHAR},
      </if>
      <if test="record.storeDate != null" >
        rkrq = #{record.storeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.borrowedNumber != null" >
        jccs = #{record.borrowedNumber,jdbcType=INTEGER},
      </if>
      <if test="record.number != null" >
        kczl = #{record.number,jdbcType=INTEGER},
      </if>
      <if test="record.translator != null" >
        translator = #{record.translator,jdbcType=VARCHAR},
      </if>
      <if test="record.txm != null" >
        txm = #{record.txm,jdbcType=VARCHAR},
      </if>
      <if test="record.bookzt != null" >
        bookzt = #{record.bookzt,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update book
    set bookid = #{record.bookNumber,jdbcType=DECIMAL},
      title = #{record.bookName,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      cbs = #{record.publisher,jdbcType=VARCHAR},
      publish_date = #{record.publishDate,jdbcType=TIMESTAMP},
      price = #{record.price,jdbcType=DECIMAL},
      czy = #{record.czy,jdbcType=VARCHAR},
      tslx = #{record.bookType,jdbcType=VARCHAR},
      sjmc = #{record.storeLocation,jdbcType=VARCHAR},
      rkrq = #{record.storeDate,jdbcType=TIMESTAMP},
      jccs = #{record.borrowedNumber,jdbcType=INTEGER},
      kczl = #{record.number,jdbcType=INTEGER},
      translator = #{record.translator,jdbcType=VARCHAR},
      txm = #{record.txm,jdbcType=VARCHAR},
      bookzt = #{record.bookzt,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.eleven.booklibrary.model.Book" >
    update book
    <set >
      <if test="bookName != null" >
        title = #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="publisher != null" >
        cbs = #{publisher,jdbcType=VARCHAR},
      </if>
      <if test="publishDate != null" >
        publish_date = #{publishDate,jdbcType=TIMESTAMP},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="czy != null" >
        czy = #{czy,jdbcType=VARCHAR},
      </if>
      <if test="bookType != null" >
        tslx = #{bookType,jdbcType=VARCHAR},
      </if>
      <if test="storeLocation != null" >
        sjmc = #{storeLocation,jdbcType=VARCHAR},
      </if>
      <if test="storeDate != null" >
        rkrq = #{storeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="borrowedNumber != null" >
        jccs = #{borrowedNumber,jdbcType=INTEGER},
      </if>
      <if test="number != null" >
        kczl = #{number,jdbcType=INTEGER},
      </if>
      <if test="translator != null" >
        translator = #{translator,jdbcType=VARCHAR},
      </if>
      <if test="txm != null" >
        txm = #{txm,jdbcType=VARCHAR},
      </if>
      <if test="bookzt != null" >
        bookzt = #{bookzt,jdbcType=INTEGER},
      </if>
    </set>
    where bookid = #{bookNumber,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.eleven.booklibrary.model.Book" >
    update book
    set title = #{bookName,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      cbs = #{publisher,jdbcType=VARCHAR},
      publish_date = #{publishDate,jdbcType=TIMESTAMP},
      price = #{price,jdbcType=DECIMAL}, 
      czy = #{czy,jdbcType=VARCHAR},
      tslx = #{bookType,jdbcType=VARCHAR},
      sjmc = #{storeLocation,jdbcType=VARCHAR},
      rkrq = #{storeDate,jdbcType=TIMESTAMP},
      jccs = #{borrowedNumber,jdbcType=INTEGER},
      kczl = #{number,jdbcType=INTEGER}
    where bookid = #{bookNumber,jdbcType=DECIMAL}
  </update>
</mapper>
